#ifndef DIR_GRAPH_
#define DIR_GRAPH_

#include <stdio.h>
#include <stdlib.h>
#include "../libfdrr/jrb.h"
#include "../libfdr/dllist.h"

typedef struct{
  JRB edges;
  JRB vertices;
}Graph;
//1
Graph creat_graph();
//2
void add_vertex(Graph graph,int id,char *name);
//3
char *get_vertex(Graph graph,int id);
//4
void add_edge(Graph graph,int v1,int v2); //from v1 to v2
//5
int has_edge(Graph graph,int v1,int v2); //check if exist the edge from v1 to v2 yes or no
//6
int indegree(Graph graph,int v,int *output);//find the vertices have edges point to v
//7
int outdegree(Graph graph,int v,int *output);//find the vertices that v points to
//8
void DAG(Graph graph);// check if graph is DAG(directed graph without directed cycles)
//9
void list_graph(Graph graph, int *output); //list adjacent of all vertices in graph
//10
void drop_graph(Graph graph);
//11
//Traverse graph
//12
void BFS(Graph grap, int start,int stop,void(*func)(Graph,int));
//13
void DFS(Graph grap, int start,int stop,void(*func)(Graph,int));

